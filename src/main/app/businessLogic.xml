<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.5.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd">
	<batch:job name="syncCustomObjectsBatch">
		<batch:threading-profile poolExhaustedAction="WAIT" />
        <batch:input>
            <poll doc:name="fireup Custom object synchronization">
            <fixed-frequency-scheduler frequency="${poll.frequencyMillis}" startDelay="${poll.startDelayMillis}" />
            <watermark variable="lastQueryDate" default-expression="${watermark.default.expression}" selector="MAX" selector-expression="#[payload.LastModifiedDate]"/>
            <sfdc:query-all config-ref="SalesforceA"
				doc:name="query Custom objects with filtering criteria from Salesforce Instance A"
				query="SELECT Id, Name, interpreter__c, year__c, LastModifiedDate FROM MusicAlbum__c WHERE LastModifiedDate &gt; #[flowVars['lastQueryDate']] AND year__c &gt; 1968" />
        </poll>
        </batch:input>
		<batch:process-records>
			<batch:step name="foreachCustomObjectinAGetCustomObjectInBStep">
				<enricher source="#[payload]" target="#[recordVars['customObjectInB']]"
					doc:name="store result in record var 'customObjectInB'">
					<sfdc:query-single config-ref="SalesforceB"
						query="SELECT Id FROM MusicAlbum__c WHERE Name = '#[payload['Name']]'"
						doc:name="query Custom object in Salesforce Instance B" />
				</enricher>
			</batch:step>
			<batch:step name="foreachCustomObjectinAUpsertCustomObjectsInBStep">
				<expression-component doc:name="set ID for upsert"><![CDATA[if (recordVars['customObjectInB'] instanceof NullPayload) {
	// Remove ID as it is an insert
	payload.remove('Id')
} else {
	// Add target system ID as it is an update
    payload.put('Id', recordVars['customObjectInB']['Id'])
}]]></expression-component>
				<expression-component doc:name="remove unnecessary fields and map custom fields"><![CDATA[payload.remove('LastModifiedDate');

// TODO - Here you should remove all custom fields that don't exist in the target system and map the ones that vary in type/format
payload.remove('year__c');]]></expression-component>
				<batch:commit size="200" doc:name="Batch Commit">
					<logger message="Custom objects to update/create: #[payload]"
						level="INFO" doc:name="log Custom objects to update/create" />
					<sfdc:upsert config-ref="SalesforceB"
						externalIdFieldName="Id" type="MusicAlbum__c"
						doc:name="upsert Custom objects in Salesforce Instance B">
						<sfdc:objects ref="#[payload]" />
					</sfdc:upsert>
				</batch:commit>
			</batch:step>
		</batch:process-records>
		<batch:on-complete>
			<json:object-to-json-transformer
				doc:name="transform BatchJobInstance to JSON" />
			<logger level="INFO" doc:name="log 'Migration process has finished'" message="Migration process has finished: #[payload]"/>
		</batch:on-complete>
	</batch:job>

</mule>
